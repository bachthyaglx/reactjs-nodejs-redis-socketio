services:
  redis:
    image: redis:7
    container_name: redis
    networks:
      - app_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    command: npm run dev
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
    networks:
      - app_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_net

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app_net

networks:
  app_net:
    driver: bridge
